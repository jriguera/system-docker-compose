name: Build docker and push to Github Packages

on:
  push:
    branches:
      - 'master'
    paths:
    - 'docker/**'

env:
  DOCKER_IMAGE_REPO: jriguera
  DOCKER_IMAGE_NAME: dockercompose
  DOCKER_BUILD_DIR: docker
  DOCKER_BUILD_PLATFORMS: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64


jobs:
  push_to_registry:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the git repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ env.DOCKER_BUILD_PLATFORMS }}

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Show Docker buildx available platforms
        run: |
          echo "QEMU platforms: ${{steps.qemu.outputs.platforms}}"
          echo "Docker buildx platforms: ${{steps.buildx.outputs.platforms}}"
          echo "Docker builder instance name: ${{steps.buildx.outputs.name}}"

      - name: Get metadata for Docker image
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=tag
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Log in to the GitHub Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to Github Packages and Google Container Registry if is not PR
        uses: docker/build-push-action@v2
        with:
          platforms: ${{ env.DOCKER_BUILD_PLATFORMS }}
          context: ${{ env.DOCKER_BUILD_DIR }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
