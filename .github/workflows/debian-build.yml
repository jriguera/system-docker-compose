# When an annotation commit is pushed, it publish the package to github artifacts
name: Debian build and release

on:
  push:
    paths:
    - 'debian/**'

env:
  DPKG_BUILDPACKAGE_DST: "build"
  DPKG_BUILDPACKAGE_ARGS: "--unsigned-source --unsigned-changes -rfakeroot --build=all"

jobs:
  build-deb:
    name: Create Debian package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build package
        id: buildpackage
        run: |
            # Install dependencies
            sudo apt-get update
            sudo apt-get install --yes  build-essential debhelper devscripts equivs
            # Set the install command to be used by mk-build-deps (use --yes for non-interactive)
            APT_GET="sudo apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends --yes"
            # Install build dependencies automatically
            sudo mk-build-deps --install --tool="${APT_GET}" debian/control
            PACKAGE=$(awk '/Package:/{ print $2 }' debian/control)
            # Build the package
            dpkg-buildpackage ${DPKG_BUILDPACKAGE_ARGS}
            mkdir -p ${DPKG_BUILDPACKAGE_DST}
            find .. -maxdepth 1 -iname "${PACKAGE}*" -exec mv -v {} "${DPKG_BUILDPACKAGE_DST}/" \;
            ARTIFACT=$(find ${DPKG_BUILDPACKAGE_DST} -maxdepth 1 -iname "${PACKAGE}*.deb")
            FILENAME=$(basename ${ARTIFACT})
            echo ::set-output name=artifact::${ARTIFACT}
            echo ::set-output name=filename::${FILENAME}
            echo ::set-output name=buildinfo::$(find ${DPKG_BUILDPACKAGE_DST} -maxdepth 1 -iname "${PACKAGE}*.buildinfo")
            echo ::set-output name=changes::$(find ${DPKG_BUILDPACKAGE_DST} -maxdepth 1 -iname "${PACKAGE}*.changes")

      - name: Save artifact
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error 
          name: ${{ steps.buildpackage.outputs.filename }}
          path: ${{ steps.buildpackage.outputs.artifact }}
